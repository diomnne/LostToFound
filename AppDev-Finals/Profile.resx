<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_editprofile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAKeElEQVR4Xu3dS6itZR3HcTPQOiZYWdiFQIg61iAJatygCIJq0KSIaFYQhQ6bFUEDa1REEHQZVBRd
        BmIYiEMLooFRaXSR6KqRg0ztnECz37vW8+J2n73PXus5+7L+z/v5wAPZwLPWy+/7vuuc7d7nKuDsPfPM
        MzfkvDjn6vZ/ASNJ3Ody3p7zmZwf5Pwy5/Gc/f6T87ucH+V8Pue9OS9p/xqgioR7Xc4Hc+7O+W9Or6dz
        fprz8Zwb278e2EWJ9KacO3Ieyzlu043kGznn2y8H7IJEeX3O53Iu5py06VPBt3Je2X554KwkxPfl/DXn
        tP075/ac57WXApyWhPeCnC/knLV7c17RXhZw0qbgcu6f6tsRf8u5tb084KQktJtzfj9Vt2OmLy2+o71M
        4LglsFtyHp5q21EXct7WXi5wXBLW63P+PlW246YvQb65vWzgSiWo6cn/yFRXEdOfCbysvXygV0Kq8uTf
        78c5vscAeiWgXf89/1Fua28F2Ebiqfrk32v6j4X8F4OwjURT/cm/1zfb2wKOkmBGePLvNX3vwBva2wMO
        k1BGi3/2tfYWgYMkkpE+9u83fSuxnycAB0kc05N/+tr5yD7W3i4wSxgjP/n3uq+9ZWCSKJbw5J89lXND
        e+uwbIlhSfHP3t3ePixXQljKx/797miXAJYpESzxyT+7s10GWJ4EsOT4J79plwKWJeNf6sf+vZ5slwOW
        I8Nf+pN/9r+c57fLAuPL4D35n8uXAlmGjN2T/1IvapcHxpWhi/9S03cG+ilBjC0j97H/YI+1SwRjysg9
        +Q/3i3aZYDwZuPgv73vtUsFYMm4f+4/2qXa5YBwZtif/ZvytQYwloxb/Zi7mvLBdNqgvg/axf3N3tcsG
        9WXQnvzbeX+7dFBbxuzJv51/5Zxrlw/qypA9+bf32Xb5oK4MWfzbu5BzU7uEUFNGfD7Hx/7tefpTW0bs
        yd/nzznXtcsI9WTAnvx9ph/+8Z52GaGeDNiTv98X22WEejLgq3N+vZoy2/p5zrXtUkJNGfGbcv45LZqN
        PZTjT/0ZQ8Z8a86j07I50vRnJa9tlw7GkFH7JHC0f+S8sV0yGEvG7SZwOPEzvozcTeBS4mc5MnY3gWeJ
        n+XJ6N0ExM+SZfxLvgmIHxLBEm8C4odZYljSTUD8sF+iWMJNQPxwmMQx8k1A/HCURDLiTUD8sKnEMtJN
        QPzUlfHenHNN+8dTk19zhG8gmr6x55b2lqCWjHf+YR5355z696bn16z8ScCTn7oy3v0/ycdNYHPip66M
        97Af4+UmcDTxU1fGe9TP8HMTOJz4qSvj3fQHeLoJXEr81JXxbhr/zE3gWeKnrox32/hnbgLip7KMtzf+
        2ZJvAuKnroz3SuOfLfEmIH7qyniPK/7Zkm4C4qeujPe4458t4SYgfurKeE8q/tnINwHxU1fGe9Lxz0a8
        CYifujLe04p/NtJNQPzUlfGedvyzEW4Cj+SIn5oy3rOKf1b5JiB+6sp4zzr+WcWbgPipK+PdlfhnlW4C
        4qeujHfX4p9VuAmIn7oy3l2Nf7bLNwHxU1fGu+vxz3bxJiB+6sp4q8Q/26WbgPipK+OtFv9sF24C4qeu
        jLdq/LOzvAk8kCN+asp4z+dMf/lEdXfmnMVfPnJ1+59QS8Zb/cm/35l8EoByEspo8c/cBOByEsio8c/c
        BOAgCWP0+GduArBXglhK/DM3AZgkhKXFP3MTYNkSwFLjn7kJsEwZ/tLjn7kJsCwZvPify02AZcjQxX8w
        NwHGloGL//LcBBhThi3+zbgJMJYMWvzbcRNgDBmy+Pu4CVBbBjzKt/Sehem63dwuJdSS8Xry9/OTfKgr
        4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/
        P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FT
        V8Yr/n7ip66MV/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr
        /n7ip66MV/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7i
        p66MV/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66M
        V/z9xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9
        xE9dGa/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9d
        Ga/4+4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4
        +4mfujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mf
        ujJe8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mfujJe
        8fcTP3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mfujJe8fcT
        P3VlvOLvJ37qynjF30/81JXxir+f+Kkr4xV/P/FTV8Yr/n7ip66MV/z9xE9dGa/4+4mfujLe8zkPT0tm
        a9N1O98uJdSS8b4650/TktmaJz91ZbwvzXlwWjJbEz91Zbzncn4yLZmtiZ/aMuDvrqbMtvyen9oy4I+u
        psy2PPmpbRpwzpPTmtmK+KktA74m54FpzWzFx37qy4g/uZoz2/Dkp76MePp6/+PTotmY+BlDhvz91aTZ
        lPgZQ4b8ltWk2ZT4GUfG/MPVrNmE+BlHxjx9l9/T07I5kvgZSwb99dW0OYov9TGWDPq6nCemdXNZnvyM
        J6P+8GreXI74GVOGfc9q4hxG/Iwpw74p56lp5RzI7/kZV8b9odXMOYgnP2PLwL+6mjr7iZ/xZeR/WM2d
        vcTP+DLy6Rt/eC6/52cZMvR3rSbPzJOf5cjYb1/Nnon4WZYM/sur6SN+liejv3c1/2Xze36WKcP/1SqB
        5fLkZ7ky/j+uMlgm8bNsCeDRVQrLI35IBBdXOSyL+GGy7mFR/IEfzNZNLIYnP+y17mIRxA/7rdsYnvjh
        IOs+hiZ+OMy6kWGJHy5n3cmQxA9HWbcyHPHDJta9DEX8sKl1M8P4S47/yAc2te5mCA/mvKa9LWAT63bK
        +1nOje0tAZta91Pat3POtbcDbGPdUEkXcm5rbwPosW6pnOmnGPmTfrhS657KeDLn0znXtpcPXIlVVjV8
        J+dV7WUDx2Hd1s56OueunLe2lwscp1Vmu+eJnOkvLH1de5nASVjlthump/19OR/Jub69POAkTeWdod/m
        fCXnAzkvby8JOC1ThSdk+jr99CPHH8q5P+eenC/lfCLnnTn+QA/O1FVX/R8RK9ZO1JgccwAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>