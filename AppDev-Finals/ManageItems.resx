<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_addItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>